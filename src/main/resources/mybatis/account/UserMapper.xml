<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bs.manage.mapper.account.UserMapper">

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into users
        (name,email,password,api_token,phone,dd_user_id,role,resources,`position`,customer_limit,created_at,updated_at)
        values
        (#{name},#{email},#{password},#{api_token},#{phone},#{dd_user_id},#{role},#{resources},#{position},#{customer_limit},#{created_at},#{updated_at})
    </insert>

    <update id="update">
        update users
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="resources != null and resources != ''">
                resources = #{resources},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="team_id != null">
                team_id = #{team_id},
            </if>
            <if test="phone != null and phone !='' ">
                phone = #{phone},
            </if>
            <if test="dd_user_id != null and dd_user_id !='' ">
                dd_user_id = #{dd_user_id},
            </if>
            <if test="parent_id != null">
                parent_id = #{parent_id},
            </if>
            <if test="has_child != null">
                has_child = #{has_child},
            </if>
            <if test="position != null and position !=''">
                `position` = #{position},
            </if>
            <if test="customer_limit != null">
                customer_limit = #{customer_limit},
            </if>
            <if test="updated_at != null">
                updated_at = #{updated_at},
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="existUserInTeam" resultType="java.lang.Boolean">
        select exists (select 1 from users where team_id = #{team_id})
    </select>

    <select id="getById" resultType="users">
		select
			id,name,email,password,api_token,
			phone,dd_user_id,role,resources,status,
			team_id,parent_id,has_child,`position`,customer_limit,
			created_at,updated_at
		from users
		where id = #{id}
	</select>

    <select id="getAll" resultType="users">
		select
			id,name,email,password,api_token,
			phone,dd_user_id,role,resources,status,
			team_id,parent_id,has_child,`position`,customer_limit,
			created_at,updated_at
		from users
	</select>

    <select id="getOneBySelectKey" resultType="users">
        select
        id,name,email,password,api_token,
        phone,dd_user_id,role,resources,status,
        team_id,parent_id,has_child,`position`,customer_limit,
        created_at,updated_at
        from users
        where 1 = 1
        <if test="name != null and name !=''">
            and name = #{name}
        </if>
        <if test="email != null and email !=''">
            and email = #{email}
        </if>
        <if test="password != null and password !=''">
            and password = #{password}
        </if>
        <if test="api_token != null and api_token !=''">
            and api_token = #{api_token}
        </if>
        <if test="phone != null and phone !=''">
            and phone = #{phone}
        </if>
        <if test="dd_user_id != null and dd_user_id !=''">
            and dd_user_id = #{dd_user_id}
        </if>
        <if test="role != null">
            and role = #{role}
        </if>
        <if test="resources != null and resources !=''">
            and resources = #{resources}
        </if>
        <if test="status != null">
            and status = #{status}
        </if>
        <if test="team_id != null">
            and team_id = #{team_id}
        </if>
        <if test="parent_id != null">
            and parent_id = #{parent_id}
        </if>
        <if test="has_child != null">
            and has_child = #{has_child}
        </if>
        <if test="position != null and position !=''">
            and `position` = #{position}
        </if>
        <if test="customer_limit != null">
            and customer_limit = #{customer_limit}
        </if>
        <if test="created_at != null">
            and created_at = #{created_at}
        </if>
        <if test="updated_at != null">
            and updated_at = #{updated_at}
        </if>

        limit 1
    </select>

    <select id="getAllBySelectKey" resultType="users">
        select
        id,name,email,password,api_token,
        phone,dd_user_id,role,resources,status,
        team_id,parent_id,has_child,`position`,customer_limit,
        created_at,updated_at
        from users
        where 1 = 1
        <if test="name != null and name !=''">
            and name = #{name}
        </if>
        <if test="email != null and email !=''">
            and email = #{email}
        </if>
        <if test="password != null and password !=''">
            and password = #{password}
        </if>
        <if test="api_token != null and api_token !=''">
            and api_token = #{api_token}
        </if>
        <if test="phone != null and phone !=''">
            and phone = #{phone}
        </if>
        <if test="dd_user_id != null and dd_user_id !=''">
            and dd_user_id = #{dd_user_id}
        </if>
        <if test="role != null">
            and role = #{role}
        </if>
        <if test="resources != null and resources !=''">
            and resources = #{resources}
        </if>
        <if test="status != null">
            and status = #{status}
        </if>
        <if test="team_id != null">
            and team_id = #{team_id}
        </if>
        <choose>
            <when test="parent_id == -1">
                and parent_id > 0
            </when>
            <when test="parent_id != null">
                and parent_id = #{parent_id}
            </when>
        </choose>
        <if test="has_child != null">
            and has_child = #{has_child}
        </if>
        <if test="position != null and position !=''">
            and `position` = #{position}
        </if>
        <if test="customer_limit != null">
            and customer_limit = #{customer_limit}
        </if>
        <if test="created_at != null">
            and created_at = #{created_at}
        </if>
        <if test="updated_at != null">
            and updated_at = #{updated_at}
        </if>

    </select>

    <select id="getByPage" resultType="users">
        select
        a.id,a.name,a.email,a.role,a.resources,a.status,a.team_id,a.parent_id,a.has_child,a.position,a.customer_limit,
        a.phone,a.dd_user_id,
        b.name as team_name,
        c.name as parent_name
        from users a
        left join team b on a.team_id = b.id
        left join users c on a.parent_id = c.id
        where 1 = 1
        <if test="team_id != null">
            and a.team_id = #{team_id}
        </if>
        <if test="keyword != null and keyword !=''">
            and (a.name like concat('%',#{keyword},'%') or
            a.email like concat('%',#{keyword},'%'))
        </if>
        <if test="parent_id != null">
            and a.parent_id = #{parent_id}
        </if>
        order by a.id
        limit #{offset},#{limit}
    </select>

    <select id="countByPage" resultType="java.lang.Integer">
        select count(1) from users
        where 1 = 1
        <if test="team_id != null">
            and team_id = #{team_id}
        </if>
        <if test="keyword != null and keyword !=''">
            and name like concat('%',#{keyword},'%') or
            email like concat('%',#{keyword},'%')
        </if>
        <if test="parent_id != null">
            and parent_id = #{parent_id}
        </if>
    </select>

    <update id="updateParentIdByUsers">
        update users set parent_id = #{parentId} , has_child = 0
        where id in
        <foreach collection="users" item="user" open="(" separator="," close=")">
            #{user.id}
        </foreach>
    </update>

    <update id="updateParentIdByParentId">
        update users set parent_id = #{newParentId},team_id = #{teamId} where parent_id = #{oldParentId}
    </update>

    <select id="getByIds" resultType="users">
        select
        id,name,email,password,api_token,
        phone,dd_user_id,role,resources,status,
        team_id,parent_id,has_child,`position`,customer_limit,
        created_at,updated_at
        from users
        where id in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

</mapper>