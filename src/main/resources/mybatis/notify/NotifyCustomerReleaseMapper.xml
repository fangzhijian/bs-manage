<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bs.manage.mapper.notify.NotifyCustomerReleaseMapper">

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
		insert into notify_customer_release
			(sn,customer_id,customer_name,process_user_id,customer_category_id,
			customer_gradation,release_type,left_day,notify_user,has_read,
			created_at,updated_at)
		values
			(#{sn},#{customer_id},#{customer_name},#{process_user_id},#{customer_category_id},
			#{customer_gradation},#{release_type},#{left_day},#{notify_user},#{has_read},
			#{created_at},#{updated_at})
	</insert>

    <insert id="insertBatch" useGeneratedKeys="true" keyProperty="id">
        insert into notify_customer_release
        (sn,customer_id,customer_name,process_user_id,customer_category_id,
        customer_gradation,release_type,left_day,notify_user,has_read,
        created_at,updated_at)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.sn},#{item.customer_id},#{item.customer_name},#{item.process_user_id},#{item.customer_category_id},
            #{item.customer_gradation},#{item.release_type},#{item.left_day},#{item.notify_user},#{item.has_read},
            #{item.created_at},#{item.updated_at})
        </foreach>
    </insert>

    <delete id="delete">
		delete from notify_customer_release where id = #{id}
	</delete>

    <delete id="deleteByIds">
        delete from notify_customer_release where id in
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>

    <update id="update">
        update notify_customer_release
        <set>
            <if test="sn != null and sn !='' ">
                sn = #{sn},
            </if>
            <if test="customer_id != null ">
                customer_id = #{customer_id},
            </if>
            <if test="customer_name != null and customer_name !='' ">
                customer_name = #{customer_name},
            </if>
            <if test="process_user_id != null ">
                process_user_id = #{process_user_id},
            </if>
            <if test="customer_category_id != null ">
                customer_category_id = #{customer_category_id},
            </if>
            <if test="customer_gradation != null and customer_gradation !='' ">
                customer_gradation = #{customer_gradation},
            </if>
            <if test="release_type != null ">
                release_type = #{release_type},
            </if>
            <if test="left_day != null ">
                left_day = #{left_day},
            </if>
            <if test="notify_user != null ">
                notify_user = #{notify_user},
            </if>
            <if test="has_read != null ">
                has_read = #{has_read},
            </if>
            <if test="updated_at != null ">
                updated_at = #{updated_at},
            </if>

        </set>
        where id = #{id}
    </update>

    <update id="updateBatch">
        <foreach collection="list" item="item" separator=";">
            update notify_customer_release
            <set>
                <if test="item.sn != null and item.sn !='' ">
                    sn = #{item.sn},
                </if>
                <if test="item.customer_id != null ">
                    customer_id = #{item.customer_id},
                </if>
                <if test="item.customer_name != null and item.customer_name !='' ">
                    customer_name = #{item.customer_name},
                </if>
                <if test="item.process_user_id != null ">
                    process_user_id = #{item.process_user_id},
                </if>
                <if test="item.customer_category_id != null ">
                    customer_category_id = #{item.customer_category_id},
                </if>
                <if test="item.customer_gradation != null and item.customer_gradation !='' ">
                    customer_gradation = #{item.customer_gradation},
                </if>
                <if test="item.release_type != null ">
                    release_type = #{item.release_type},
                </if>
                <if test="item.left_day != null ">
                    left_day = #{item.left_day},
                </if>
                <if test="item.notify_user != null ">
                    notify_user = #{item.notify_user},
                </if>
                <if test="item.has_read != null ">
                    has_read = #{item.has_read},
                </if>
                <if test="item.updated_at != null ">
                    updated_at = #{item.updated_at},
                </if>

            </set>
            where id = #{item.id}
        </foreach>
    </update>

    <select id="getById" resultType="notifyCustomerRelease">
		select
			id,sn,customer_id,customer_name,process_user_id,
			customer_category_id,customer_gradation,release_type,left_day,notify_user,
			has_read,created_at,updated_at
		from notify_customer_release
		where id = #{id}
	</select>

    <select id="getAll" resultType="notifyCustomerRelease">
		select
			id,sn,customer_id,customer_name,process_user_id,
			customer_category_id,customer_gradation,release_type,left_day,notify_user,
			has_read,created_at,updated_at
		from notify_customer_release
	</select>

    <select id="getOneBySelectKey" resultType="notifyCustomerRelease">
        select
        id,sn,customer_id,customer_name,process_user_id,
        customer_category_id,customer_gradation,release_type,left_day,notify_user,
        has_read,created_at,updated_at
        from notify_customer_release
        where 1 = 1
        <if test="sn != null and sn !=''">
            and sn = #{sn}
        </if>
        <if test="customer_id != null">
            and customer_id = #{customer_id}
        </if>
        <if test="customer_name != null and customer_name !=''">
            and customer_name = #{customer_name}
        </if>
        <if test="process_user_id != null">
            and process_user_id = #{process_user_id}
        </if>
        <if test="customer_category_id != null">
            and customer_category_id = #{customer_category_id}
        </if>
        <if test="customer_gradation != null and customer_gradation !=''">
            and customer_gradation = #{customer_gradation}
        </if>
        <if test="release_type != null">
            and release_type = #{release_type}
        </if>
        <if test="left_day != null">
            and left_day = #{left_day}
        </if>
        <if test="notify_user != null">
            and notify_user = #{notify_user}
        </if>
        <if test="has_read != null">
            and has_read = #{has_read}
        </if>
        <if test="created_at != null">
            and created_at = #{created_at}
        </if>
        <if test="updated_at != null">
            and updated_at = #{updated_at}
        </if>

        limit 1
    </select>

    <select id="getAllBySelectKey" resultType="notifyCustomerRelease">
        select
        id,sn,customer_id,customer_name,process_user_id,
        customer_category_id,customer_gradation,release_type,left_day,notify_user,
        has_read,created_at,updated_at
        from notify_customer_release
        where 1 = 1
        <if test="sn != null and sn !=''">
            and sn = #{sn}
        </if>
        <if test="customer_id != null">
            and customer_id = #{customer_id}
        </if>
        <if test="customer_name != null and customer_name !=''">
            and customer_name = #{customer_name}
        </if>
        <if test="process_user_id != null">
            and process_user_id = #{process_user_id}
        </if>
        <if test="customer_category_id != null">
            and customer_category_id = #{customer_category_id}
        </if>
        <if test="customer_gradation != null and customer_gradation !=''">
            and customer_gradation = #{customer_gradation}
        </if>
        <if test="release_type != null">
            and release_type = #{release_type}
        </if>
        <if test="left_day != null">
            and left_day = #{left_day}
        </if>
        <if test="notify_user != null">
            and notify_user = #{notify_user}
        </if>
        <if test="has_read != null">
            and has_read = #{has_read}
        </if>
        <if test="created_at != null">
            and created_at = #{created_at}
        </if>
        <if test="updated_at != null">
            and updated_at = #{updated_at}
        </if>

    </select>

    <update id="truncate">
        truncate table notify_customer_release
    </update>

    <select id="countByUnRead" resultType="java.lang.Integer">
        select count(1) from notify_customer_release where notify_user = #{notifyUser} and has_read = 0
    </select>

    <select id="countByPage" resultType="java.lang.Integer">
        select count(1) from notify_customer_release where notify_user = #{notifyUser}
    </select>

    <select id="getByPage" resultType="notifyCustomerRelease">
        select
        a.id,a.sn,a.customer_id,a.customer_name,a.process_user_id, u.name as process_user_name,
        a.customer_category_id,a.customer_gradation,a.release_type,a.left_day,
        a.has_read,a.created_at,a.updated_at
        from notify_customer_release a
        left join users u on u.id = a.process_user_id
        where a.notify_user = #{notifyUser}
        order by has_read asc,a.process_user_id asc,a.left_day asc,a.id asc
        limit #{offset},#{limit}
    </select>

</mapper>