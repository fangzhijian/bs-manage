<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bs.manage.mapper.console.DateReportMapper">

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
		insert into date_report
			(date,user_id,team_id,customer_id,customer_category_id,
			customer_name,customer_gradation,activeness,purpose,visit_result,visit_remark,
			after_action,action_remark,created_at,updated_at)
		values
			(#{date},#{user_id},#{team_id},#{customer_id},#{customer_category_id},
			#{customer_name},#{customer_gradation},#{activeness},#{purpose},#{visit_result},#{visit_remark},
			#{after_action},#{action_remark},#{created_at},#{updated_at})
	</insert>


    <delete id="delete">
		delete from date_report where id = #{id}
	</delete>


    <update id="update">
        update date_report
        <set>
            <if test="customer_category_id != null ">
                customer_category_id = #{customer_category_id},
            </if>
            <if test="customer_name != null and customer_name !=''">
                customer_name = #{customer_name},
            </if>
            <if test="customer_gradation != null and customer_gradation !='' ">
                customer_gradation = #{customer_gradation},
            </if>
            <if test="activeness != null">
                activeness = #{activeness},
            </if>
            <if test="purpose != null and purpose !=''">
                purpose = #{purpose},
            </if>
            <if test="visit_result != null">
                visit_result = #{visit_result},
            </if>
            <if test="visit_remark != null and visit_remark !=''">
                visit_remark = #{visit_remark},
            </if>
            <if test="after_action != null">
                after_action = #{after_action},
            </if>
            <if test="action_remark != null and action_remark !=''">
                action_remark = #{action_remark},
            </if>
            <if test="updated_at != null">
                updated_at = #{updated_at},
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="getById" resultType="dateReport">
		select
			id,date,user_id,team_id,customer_id,
			customer_name,customer_gradation,activeness,purpose,visit_result,visit_remark,
			after_action,action_remark,created_at,updated_at
		from date_report
		where id = #{id}
	</select>

    <select id="getAll" resultType="dateReport">
		select
			id,date,user_id,team_id,customer_id,
			customer_name,customer_gradation,activeness,purpose,visit_result,visit_remark,
			after_action,action_remark,created_at,updated_at
		from date_report
	</select>

    <select id="getOneBySelectKey" resultType="dateReport">
        select
        id,date,user_id,team_id,customer_id,
        customer_name,customer_gradation,activeness,purpose,visit_result,visit_remark,
        after_action,action_remark,created_at,updated_at
        from date_report
        where 1 = 1
        <if test="date != null">
            and date = #{date}
        </if>
        <if test="user_id != null">
            and user_id = #{user_id}
        </if>
        <if test="team_id != null">
            and team_id = #{team_id}
        </if>
        <if test="customer_id != null">
            and customer_id = #{customer_id}
        </if>
        <if test="customer_name != null and customer_name !=''">
            and customer_name = #{customer_name}
        </if>
        <if test="customer_gradation != null and customer_gradation !=''">
            and customer_gradation = #{customer_gradation}
        </if>
        <if test="activeness != null">
            and activeness = #{activeness}
        </if>
        <if test="purpose != null and purpose !=''">
            and purpose = #{purpose}
        </if>
        <if test="visit_result != null">
            and visit_result = #{visit_result}
        </if>
        <if test="visit_remark != null and visit_remark !=''">
            and visit_remark = #{visit_remark}
        </if>
        <if test="after_action != null">
            and after_action = #{after_action}
        </if>
        <if test="action_remark != null and action_remark !=''">
            and action_remark = #{action_remark}
        </if>
        <if test="created_at != null">
            and created_at = #{created_at}
        </if>
        <if test="updated_at != null">
            and updated_at = #{updated_at}
        </if>

        limit 1
    </select>

    <select id="getAllBySelectKey" resultType="dateReport">
        select
        id,date,user_id,team_id,customer_id,
        customer_name,customer_gradation,activeness,purpose,visit_result,visit_remark,
        after_action,action_remark,created_at,updated_at
        from date_report
        where 1 = 1
        <if test="date != null">
            and date = #{date}
        </if>
        <if test="user_id != null">
            and user_id = #{user_id}
        </if>
        <if test="team_id != null">
            and team_id = #{team_id}
        </if>
        <if test="customer_id != null">
            and customer_id = #{customer_id}
        </if>
        <if test="customer_name != null and customer_name !=''">
            and customer_name = #{customer_name}
        </if>
        <if test="customer_gradation != null and customer_gradation !=''">
            and customer_gradation = #{customer_gradation}
        </if>
        <if test="activeness != null">
            and activeness = #{activeness}
        </if>
        <if test="purpose != null and purpose !=''">
            and purpose = #{purpose}
        </if>
        <if test="visit_result != null">
            and visit_result = #{visit_result}
        </if>
        <if test="visit_remark != null and visit_remark !=''">
            and visit_remark = #{visit_remark}
        </if>
        <if test="after_action != null">
            and after_action = #{after_action}
        </if>
        <if test="action_remark != null and action_remark !=''">
            and action_remark = #{action_remark}
        </if>
        <if test="created_at != null">
            and created_at = #{created_at}
        </if>
        <if test="updated_at != null">
            and updated_at = #{updated_at}
        </if>

    </select>

    <select id="countByPage" resultType="java.lang.Integer">
        select
        count(1)
        from date_report b
        inner join users a on a.id = b.user_id
        where 1 = 1
        <if test="date != null">
            and b.date = #{date}
        </if>
        <if test="userName != null and userName != ''">
            and a.name like concat('%',#{userName},'%')
        </if>
        <if test="customerName != null and customerName != ''">
            and b.customer_name like concat('%',#{customerName},'%')
        </if>
        <if test="customer_id != null">
            and b.customer_id = #{customer_id}
        </if>
        <if test="visit_result != null">
            and b.visit_result = #{visit_result}
        </if>
        <if test="after_action != null">
            and b.after_action = #{after_action}
        </if>
        <if test="user_ids != null and user_ids.size>0 ">
            and b.user_id in
            <foreach collection="user_ids" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <resultMap id="dateReportMap" type="com.bs.manage.model.bean.console.DateReport">
        <id column="id" property="id"/>
        <result column="date" property="date"/>
        <result column="user_id" property="user_id"/>
        <result column="user_name" property="user_name"/>
        <result column="team_id" property="team_id"/>
        <result column="team_name" property="team_name"/>
        <result column="customer_id" property="customer_id"/>
        <result column="customer_name" property="customer_name"/>
        <result column="purpose" property="purpose"/>
        <result column="visit_result" property="visit_result"/>
        <result column="visit_remark" property="visit_remark"/>
        <result column="after_action" property="after_action"/>
        <result column="action_remark" property="action_remark"/>
        <result column="created_at" property="created_at"/>
        <association property="reportProducts" resultMap="dateReportProductMap"/>
    </resultMap>

    <resultMap id="dateReportProductMap" type="com.bs.manage.model.bean.console.DateReportProduct">
        <id column="c_id" property="id"/>
        <result column="c_date_report_id" property="date_report_id"/>
        <result column="c_selected" property="selected"/>
        <result column="c_product_id" property="product_id"/>
        <result column="c_product_name" property="product_name"/>
        <result column="c_amount" property="amount"/>
    </resultMap>

    <select id="getByPage" resultMap="dateReportMap">
        select
        bb.id,bb.date,bb.user_id,bb.user_name,
        bb.team_id,bb.customer_id,bb.customer_name,bb.purpose,bb.visit_result,
        bb.visit_remark,bb.after_action,bb.action_remark,bb.created_at,
        c.id as c_id,c.date_report_id as c_date_report_id,c.product_id as c_product_id,
        c.selected as c_selected,c.product_name as c_product_name,c.amount as c_amount,
        d.name as team_name
        from (select b.*,a.name as user_name from date_report b
        inner join users a on a.id = b.user_id
        where 1 = 1
        <if test="date != null">
            and b.date = #{date}
        </if>
        <if test="userName != null and userName != ''">
            and a.name like concat('%',#{userName},'%')
        </if>
        <if test="customerName != null and customerName != ''">
            and b.customer_name like concat('%',#{customerName},'%')
        </if>
        <if test="customer_id != null">
            and b.customer_id = #{customer_id}
        </if>
        <if test="visit_result != null">
            and b.visit_result = #{visit_result}
        </if>
        <if test="after_action != null">
            and b.after_action = #{after_action}
        </if>
        <if test="user_ids != null and user_ids.size>0 ">
            and b.user_id in
            <foreach collection="user_ids" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        order by created_at desc limit #{offset},#{limit}) bb

        left join date_report_product c on c.date_report_id = bb.id
        left join team d on d.id = bb.team_id
    </select>


    <select id="summaryGroupId" resultType="idAndAmount">
        select ${groupId} as id,sum(b.amount) as amount
        from date_report a
        inner join date_report_product b on a.id = b.date_report_id
        <if test="groupId == 'product_brand_id' || groupId == 'product_project_id'">
            inner join product c on c.id = b.product_id
        </if>
        where date &gt;= concat(#{goal_month},'01') and date &lt;= #{monthEnd}
        <if test="userIds != null and userIds.size>0 ">
            and a.user_id in
            <foreach collection="userIds" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        group by ${groupId}
    </select>

    <select id="summaryByType" resultType="idAndCount">
        <choose>
            <when test="queryType == 1 || queryType == 4">
                select process_user_id as user_id,count(id) as total,customer_category_id, customer_gradation
                from customer
                where delete_status = 0
                <if test="queryType == 4">
                    and activeness = 1
                </if>
                and process_user_id != 0
                group by process_user_id,customer_category_id,customer_gradation
            </when>
            <otherwise>
                select user_id,count(distinct(customer_id)) as total,customer_category_id, customer_gradation
                from date_report
                where 1 = 1
                <if test="queryType == 3">
                    and visit_result = 1
                </if>
                and date between concat(#{month},'01') and concat(#{month},'31')
                group by user_id,customer_category_id,customer_gradation
            </otherwise>
        </choose>
    </select>

    <select id="getPrevTimeWhenDelete" resultType="java.time.LocalDateTime">
        select created_at from date_report
        where customer_id = #{customer_id} and id != #{id}
        and visit_result = 1 order by created_at desc limit 1,1
    </select>

    <!--    一个客户不同时间可以绑定不同的账号,分组要区别user_id-->
    <select id="getUnitPrice" resultType="idAndAmount">
        select
        <if test="queryType == 1">
            a.team_id,
        </if>
        <if test="queryType == 4">
            a.customer_category_id,a.customer_gradation,
        </if>
        IFNULL(sum(b.amount),0) as amount,
        count(DISTINCT(a.id)) as count
        from date_report a
        left join date_report_product b on b.date_report_id = a.id
        WHERE date between concat(#{month},'01') and #{monthEnd}
        <if test="userIds != null and userIds.size>0 ">
            and a.user_id in
            <foreach collection="userIds" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        GROUP BY
        <if test="queryType == 1">
            a.team_id
        </if>
        <if test="queryType == 4">
            a.customer_category_id,a.customer_gradation
        </if>

    </select>

    <select id="summaryAction" resultType="reportSummary">
        select team_id,customer_category_id,customer_gradation,
        SUM(b_num) as product_num,
        sum(CASE WHEN visit_result = 1 THEN 1 ELSE 0 end) as result_deal,
        sum(CASE WHEN visit_result = 2 THEN 1 ELSE 0 end) as result_mind,
        sum(CASE WHEN visit_result = 3 THEN 1 ELSE 0 end) as result_no_mind,
        sum(CASE WHEN visit_result = 4 THEN 1 ELSE 0 end) as result_other,
        sum(CASE WHEN after_action = 1 THEN 1 ELSE 0 end) as action_deal,
        sum(CASE WHEN after_action = 2 THEN 1 ELSE 0 end) as action_continue,
        sum(CASE WHEN after_action = 3 THEN 1 ELSE 0 end) as action_not,
        sum(CASE WHEN after_action = 4 THEN 1 ELSE 0 end) as action_other
        FROM (
        SELECT a.id,visit_result,after_action,a.team_id,a.customer_category_id,a.customer_gradation,
        count(b.id) as b_num
        from date_report a
        LEFT JOIN date_report_product b on a.id = b.date_report_id
        WHERE date =#{date}
        <if test="userIds != null and userIds.size>0 ">
            and a.user_id in
            <foreach collection="userIds" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        GROUP BY a.id
        )as ss
        GROUP BY
        <if test="queryType == 1">
            team_id
        </if>
        <if test="queryType == 4">
            customer_category_id,customer_gradation
        </if>
    </select>

    <select id="topSale" resultType="idAndAmount">
        SELECT
            a.user_id as id, IFNULL(sum(b.amount),0) as amount
        from  date_report a
        LEFT JOIN date_report_product b on a.id = b.date_report_id
        WHERE date between concat(#{month},'01') and #{monthEnd}
        <if test="team_id != null">
            and a.team_id = #{team_id}
        </if>
        GROUP BY a.user_id
    </select>

    <select id="getCountIdByGroupId" resultType="idAndCount">
        select
        <if test="queryType == 1">
            a.team_id,
        </if>
        <if test="queryType == 4">
            a.customer_category_id,a.customer_gradation,
        </if>
        count(a.id) as total,
        count(DISTINCT(a.customer_id)) as anther_total
        from date_report a
        WHERE date between concat(#{month},'01') and #{monthEnd}
        <if test="userIds != null and userIds.size>0 ">
            and a.user_id in
            <foreach collection="userIds" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        GROUP BY
        <if test="queryType == 1">
            a.team_id
        </if>
        <if test="queryType == 4">
            a.customer_category_id,a.customer_gradation
        </if>
    </select>


    <select id="distinctCustomerIdForDeal" resultType="dateReport">
        SELECT DISTINCT(customer_id) ,user_id,team_id,customer_category_id,customer_gradation
        FROM date_report
        WHERE visit_result = 1 and date between concat(#{month},'01') and #{monthEnd}
        <if test="userIds != null and userIds.size>0 ">
            and user_id in
            <foreach collection="userIds" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
    </select>


</mapper>